// Initialize the Application
1. initializeApp()
    - Set up the React project
    - Install react-router-dom for routing

// Configure Routing
2. configureRouting()
    - Define routes for RegistrationPage, LoginPage, HomePage, and ProfilePage
    - Protect HomePage route to ensure only logged-in users can access it

// User Registration
3. createRegistrationForm()
    - Create a form with fields: username, password, confirm password

4. handleRegistrationFormSubmission()
    - On form submission:
        - Validate input to ensure passwords match and fields are not empty
        - Save new user data to localStorage

// User Login
5. createLoginForm()
    - Create a form with fields: username, password

6. handleLoginFormSubmission()
    - On form submission:
        - Validate input to ensure fields are not empty
        - Authenticate user by checking credentials against localStorage data
        - If valid, redirect user to HomePage

// Home Page (Task Management)
7. displayHomePage()
    - Display a list of tasks fetched from localStorage

8. addNewTaskButton()
    - Include a button to add a new task, which opens TaskForm component

// Task Form
9. createTaskForm()
    - Create a form with fields: task name, description, priority, due date, status

10. handleTaskFormSubmission()
    - On form submission:
        - Validate input to ensure all required fields are filled
        - Save or update task data in localStorage

// Task List
11. displayTaskList()
    - Fetch tasks from localStorage and display them

12. taskListButtons()
    - Include buttons for:
        - Editing a task (opens TaskForm with task details pre-filled)
        - Deleting a task (removes task from localStorage)
        - Marking a task as completed (updates task status in localStorage)

// Task Item
13. displayTaskItem()
    - Display individual task details

14. taskItemButtons()
    - Include buttons for:
        - Editing a task
        - Deleting a task
        - Marking a task as completed

// User Profile
15. displayProfilePage()
    - Display user details fetched from localStorage

16. handleProfileUpdate()
    - Allow user to update details
    - Save updated details to localStorage

// Navbar
17. createNavbar()
    - Provide navigation links to Home, Profile, and Logout

// Utility Functions
18. addTask()
    - Add a new task to localStorage

19. viewTasks()
    - Retrieve tasks from localStorage

20. updateTask()
    - Update an existing task in localStorage

21. deleteTask()
    - Remove a task from localStorage

22. registerUser()
    - Save new user data to localStorage

23. loginUser()
    - Authenticate user and manage session state

// Styling and Responsiveness
24. applyResponsiveDesign()
    - Ensure the app is responsive for different screen sizes (320px, 480px, 768px, 1024px, 1200px)

25. applyConsistentStyling()
    - Use consistent typography and color schemes

26. applyInteractiveStyling()
    - Implement hover effects and visual cues for interactive elements

// Bonus Features
27. addDueDateField()
    - Add due date field when creating tasks

28. showOverdueWarnings()
    - Show warnings for overdue tasks on user login

29. createCompletedTasksPage()
    - Create a separate page to display completed tasks

30. includeCompletionDate()
    - Include the completion date for each completed task

31. enableURLTaskSearch()
    - Enable URL-based task search functionality

// Final Steps
32. testApp()
    - Test the application thoroughly to ensure all features work as expected

33. deployApp()
    - Deploy the application

34. shareRepositoryLink()
    - Share the GitHub repository link with the mentor for submission
